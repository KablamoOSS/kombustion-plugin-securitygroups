package resources

// Code generated by go generate; DO NOT EDIT.
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
)

// ServiceCatalogCloudFormationProvisionedProduct Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-cloudformationprovisionedproduct.html
type ServiceCatalogCloudFormationProvisionedProduct struct {
	Type       string                                                   `yaml:"Type"`
	Properties ServiceCatalogCloudFormationProvisionedProductProperties `yaml:"Properties"`
	Condition  interface{}                                              `yaml:"Condition,omitempty"`
	Metadata   interface{}                                              `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                                              `yaml:"DependsOn,omitempty"`
}

// ServiceCatalogCloudFormationProvisionedProduct Properties
type ServiceCatalogCloudFormationProvisionedProductProperties struct {
	AcceptLanguage           interface{} `yaml:"AcceptLanguage,omitempty"`
	PathId                   interface{} `yaml:"PathId,omitempty"`
	ProductId                interface{} `yaml:"ProductId,omitempty"`
	ProductName              interface{} `yaml:"ProductName,omitempty"`
	ProvisionedProductName   interface{} `yaml:"ProvisionedProductName,omitempty"`
	ProvisioningArtifactId   interface{} `yaml:"ProvisioningArtifactId,omitempty"`
	ProvisioningArtifactName interface{} `yaml:"ProvisioningArtifactName,omitempty"`
	NotificationArns         interface{} `yaml:"NotificationArns,omitempty"`
	ProvisioningParameters   interface{} `yaml:"ProvisioningParameters,omitempty"`
	Tags                     interface{} `yaml:"Tags,omitempty"`
}

// NewServiceCatalogCloudFormationProvisionedProduct constructor creates a new ServiceCatalogCloudFormationProvisionedProduct
func NewServiceCatalogCloudFormationProvisionedProduct(properties ServiceCatalogCloudFormationProvisionedProductProperties, deps ...interface{}) ServiceCatalogCloudFormationProvisionedProduct {
	return ServiceCatalogCloudFormationProvisionedProduct{
		Type:       "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseServiceCatalogCloudFormationProvisionedProduct parses ServiceCatalogCloudFormationProvisionedProduct
func ParseServiceCatalogCloudFormationProvisionedProduct(
	name string,
	data string,
) (
	source string,
	conditions types.TemplateObject,
	metadata types.TemplateObject,
	mappings types.TemplateObject,
	outputs types.TemplateObject,
	parameters types.TemplateObject,
	resources types.TemplateObject,
	transform types.TemplateObject,
	errors []error,
) {
	source = "kombustion-core-resources"
	var resource ServiceCatalogCloudFormationProvisionedProduct
	err := yaml.Unmarshal([]byte(data), &resource)

	if err != nil {
		errors = append(errors, err)
		return
	}

	if validateErrs := resource.Properties.Validate(); len(errors) > 0 {
		errors = append(errors, validateErrs...)
		return
	}

	resources = types.TemplateObject{name: resource}

	return
}

// ParseServiceCatalogCloudFormationProvisionedProduct validator
func (resource ServiceCatalogCloudFormationProvisionedProduct) Validate() []error {
	return resource.Properties.Validate()
}

// ParseServiceCatalogCloudFormationProvisionedProductProperties validator
func (resource ServiceCatalogCloudFormationProvisionedProductProperties) Validate() []error {
	errors := []error{}
	return errors
}
