package resources

// Code generated by go generate; DO NOT EDIT.
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
)

// AutoScalingScheduledAction Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html
type AutoScalingScheduledAction struct {
	Type       string                               `yaml:"Type"`
	Properties AutoScalingScheduledActionProperties `yaml:"Properties"`
	Condition  interface{}                          `yaml:"Condition,omitempty"`
	Metadata   interface{}                          `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                          `yaml:"DependsOn,omitempty"`
}

// AutoScalingScheduledAction Properties
type AutoScalingScheduledActionProperties struct {
	AutoScalingGroupName interface{} `yaml:"AutoScalingGroupName"`
	DesiredCapacity      interface{} `yaml:"DesiredCapacity,omitempty"`
	EndTime              interface{} `yaml:"EndTime,omitempty"`
	MaxSize              interface{} `yaml:"MaxSize,omitempty"`
	MinSize              interface{} `yaml:"MinSize,omitempty"`
	Recurrence           interface{} `yaml:"Recurrence,omitempty"`
	StartTime            interface{} `yaml:"StartTime,omitempty"`
}

// NewAutoScalingScheduledAction constructor creates a new AutoScalingScheduledAction
func NewAutoScalingScheduledAction(properties AutoScalingScheduledActionProperties, deps ...interface{}) AutoScalingScheduledAction {
	return AutoScalingScheduledAction{
		Type:       "AWS::AutoScaling::ScheduledAction",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseAutoScalingScheduledAction parses AutoScalingScheduledAction
func ParseAutoScalingScheduledAction(
	name string,
	data string,
) (
	source string,
	conditions types.TemplateObject,
	metadata types.TemplateObject,
	mappings types.TemplateObject,
	outputs types.TemplateObject,
	parameters types.TemplateObject,
	resources types.TemplateObject,
	transform types.TemplateObject,
	errors []error,
) {
	source = "kombustion-core-resources"
	var resource AutoScalingScheduledAction
	err := yaml.Unmarshal([]byte(data), &resource)

	if err != nil {
		errors = append(errors, err)
		return
	}

	if validateErrs := resource.Properties.Validate(); len(errors) > 0 {
		errors = append(errors, validateErrs...)
		return
	}

	resources = types.TemplateObject{name: resource}

	return
}

// ParseAutoScalingScheduledAction validator
func (resource AutoScalingScheduledAction) Validate() []error {
	return resource.Properties.Validate()
}

// ParseAutoScalingScheduledActionProperties validator
func (resource AutoScalingScheduledActionProperties) Validate() []error {
	errors := []error{}
	if resource.AutoScalingGroupName == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'AutoScalingGroupName'"))
	}
	return errors
}
