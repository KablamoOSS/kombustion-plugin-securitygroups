package resources

// Code generated by go generate; DO NOT EDIT.
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/pkg/parsers/properties"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
)

// EMRInstanceGroupConfig Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html
type EMRInstanceGroupConfig struct {
	Type       string                           `yaml:"Type"`
	Properties EMRInstanceGroupConfigProperties `yaml:"Properties"`
	Condition  interface{}                      `yaml:"Condition,omitempty"`
	Metadata   interface{}                      `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                      `yaml:"DependsOn,omitempty"`
}

// EMRInstanceGroupConfig Properties
type EMRInstanceGroupConfigProperties struct {
	BidPrice          interface{}                                      `yaml:"BidPrice,omitempty"`
	InstanceCount     interface{}                                      `yaml:"InstanceCount"`
	InstanceRole      interface{}                                      `yaml:"InstanceRole"`
	InstanceType      interface{}                                      `yaml:"InstanceType"`
	JobFlowId         interface{}                                      `yaml:"JobFlowId"`
	Market            interface{}                                      `yaml:"Market,omitempty"`
	Name              interface{}                                      `yaml:"Name,omitempty"`
	Configurations    interface{}                                      `yaml:"Configurations,omitempty"`
	EbsConfiguration  *properties.InstanceGroupConfigEbsConfiguration  `yaml:"EbsConfiguration,omitempty"`
	AutoScalingPolicy *properties.InstanceGroupConfigAutoScalingPolicy `yaml:"AutoScalingPolicy,omitempty"`
}

// NewEMRInstanceGroupConfig constructor creates a new EMRInstanceGroupConfig
func NewEMRInstanceGroupConfig(properties EMRInstanceGroupConfigProperties, deps ...interface{}) EMRInstanceGroupConfig {
	return EMRInstanceGroupConfig{
		Type:       "AWS::EMR::InstanceGroupConfig",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseEMRInstanceGroupConfig parses EMRInstanceGroupConfig
func ParseEMRInstanceGroupConfig(
	name string,
	data string,
) (
	source string,
	conditions types.TemplateObject,
	metadata types.TemplateObject,
	mappings types.TemplateObject,
	outputs types.TemplateObject,
	parameters types.TemplateObject,
	resources types.TemplateObject,
	transform types.TemplateObject,
	errors []error,
) {
	source = "kombustion-core-resources"
	var resource EMRInstanceGroupConfig
	err := yaml.Unmarshal([]byte(data), &resource)

	if err != nil {
		errors = append(errors, err)
		return
	}

	if validateErrs := resource.Properties.Validate(); len(errors) > 0 {
		errors = append(errors, validateErrs...)
		return
	}

	resources = types.TemplateObject{name: resource}

	return
}

// ParseEMRInstanceGroupConfig validator
func (resource EMRInstanceGroupConfig) Validate() []error {
	return resource.Properties.Validate()
}

// ParseEMRInstanceGroupConfigProperties validator
func (resource EMRInstanceGroupConfigProperties) Validate() []error {
	errors := []error{}
	if resource.InstanceCount == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'InstanceCount'"))
	}
	if resource.InstanceRole == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'InstanceRole'"))
	}
	if resource.InstanceType == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'InstanceType'"))
	}
	if resource.JobFlowId == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'JobFlowId'"))
	}
	return errors
}
