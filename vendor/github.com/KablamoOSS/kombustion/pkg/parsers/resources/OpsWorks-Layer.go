package resources

// Code generated by go generate; DO NOT EDIT.
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/pkg/parsers/properties"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
)

// OpsWorksLayer Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-layer.html
type OpsWorksLayer struct {
	Type       string                  `yaml:"Type"`
	Properties OpsWorksLayerProperties `yaml:"Properties"`
	Condition  interface{}             `yaml:"Condition,omitempty"`
	Metadata   interface{}             `yaml:"Metadata,omitempty"`
	DependsOn  interface{}             `yaml:"DependsOn,omitempty"`
}

// OpsWorksLayer Properties
type OpsWorksLayerProperties struct {
	AutoAssignElasticIps        interface{}                                  `yaml:"AutoAssignElasticIps"`
	AutoAssignPublicIps         interface{}                                  `yaml:"AutoAssignPublicIps"`
	CustomInstanceProfileArn    interface{}                                  `yaml:"CustomInstanceProfileArn,omitempty"`
	CustomJson                  interface{}                                  `yaml:"CustomJson,omitempty"`
	EnableAutoHealing           interface{}                                  `yaml:"EnableAutoHealing"`
	InstallUpdatesOnBoot        interface{}                                  `yaml:"InstallUpdatesOnBoot,omitempty"`
	Name                        interface{}                                  `yaml:"Name"`
	Shortname                   interface{}                                  `yaml:"Shortname"`
	StackId                     interface{}                                  `yaml:"StackId"`
	Type                        interface{}                                  `yaml:"Type"`
	UseEbsOptimizedInstances    interface{}                                  `yaml:"UseEbsOptimizedInstances,omitempty"`
	CustomRecipes               *properties.LayerRecipes                     `yaml:"CustomRecipes,omitempty"`
	Attributes                  interface{}                                  `yaml:"Attributes,omitempty"`
	LoadBasedAutoScaling        *properties.LayerLoadBasedAutoScaling        `yaml:"LoadBasedAutoScaling,omitempty"`
	CustomSecurityGroupIds      interface{}                                  `yaml:"CustomSecurityGroupIds,omitempty"`
	Packages                    interface{}                                  `yaml:"Packages,omitempty"`
	Tags                        interface{}                                  `yaml:"Tags,omitempty"`
	VolumeConfigurations        interface{}                                  `yaml:"VolumeConfigurations,omitempty"`
	LifecycleEventConfiguration *properties.LayerLifecycleEventConfiguration `yaml:"LifecycleEventConfiguration,omitempty"`
}

// NewOpsWorksLayer constructor creates a new OpsWorksLayer
func NewOpsWorksLayer(properties OpsWorksLayerProperties, deps ...interface{}) OpsWorksLayer {
	return OpsWorksLayer{
		Type:       "AWS::OpsWorks::Layer",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseOpsWorksLayer parses OpsWorksLayer
func ParseOpsWorksLayer(
	name string,
	data string,
) (
	source string,
	conditions types.TemplateObject,
	metadata types.TemplateObject,
	mappings types.TemplateObject,
	outputs types.TemplateObject,
	parameters types.TemplateObject,
	resources types.TemplateObject,
	transform types.TemplateObject,
	errors []error,
) {
	source = "kombustion-core-resources"
	var resource OpsWorksLayer
	err := yaml.Unmarshal([]byte(data), &resource)

	if err != nil {
		errors = append(errors, err)
		return
	}

	if validateErrs := resource.Properties.Validate(); len(errors) > 0 {
		errors = append(errors, validateErrs...)
		return
	}

	resources = types.TemplateObject{name: resource}

	return
}

// ParseOpsWorksLayer validator
func (resource OpsWorksLayer) Validate() []error {
	return resource.Properties.Validate()
}

// ParseOpsWorksLayerProperties validator
func (resource OpsWorksLayerProperties) Validate() []error {
	errors := []error{}
	if resource.AutoAssignElasticIps == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'AutoAssignElasticIps'"))
	}
	if resource.AutoAssignPublicIps == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'AutoAssignPublicIps'"))
	}
	if resource.EnableAutoHealing == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'EnableAutoHealing'"))
	}
	if resource.Name == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'Name'"))
	}
	if resource.Shortname == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'Shortname'"))
	}
	if resource.StackId == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'StackId'"))
	}
	if resource.Type == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'Type'"))
	}
	return errors
}
