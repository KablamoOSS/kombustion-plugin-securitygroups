package resources

// Code generated by go generate; DO NOT EDIT.
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/pkg/parsers/properties"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
)

// SESReceiptRule Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ses-receiptrule.html
type SESReceiptRule struct {
	Type       string                   `yaml:"Type"`
	Properties SESReceiptRuleProperties `yaml:"Properties"`
	Condition  interface{}              `yaml:"Condition,omitempty"`
	Metadata   interface{}              `yaml:"Metadata,omitempty"`
	DependsOn  interface{}              `yaml:"DependsOn,omitempty"`
}

// SESReceiptRule Properties
type SESReceiptRuleProperties struct {
	After       interface{}                 `yaml:"After,omitempty"`
	RuleSetName interface{}                 `yaml:"RuleSetName"`
	Rule        *properties.ReceiptRuleRule `yaml:"Rule"`
}

// NewSESReceiptRule constructor creates a new SESReceiptRule
func NewSESReceiptRule(properties SESReceiptRuleProperties, deps ...interface{}) SESReceiptRule {
	return SESReceiptRule{
		Type:       "AWS::SES::ReceiptRule",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseSESReceiptRule parses SESReceiptRule
func ParseSESReceiptRule(
	name string,
	data string,
) (
	source string,
	conditions types.TemplateObject,
	metadata types.TemplateObject,
	mappings types.TemplateObject,
	outputs types.TemplateObject,
	parameters types.TemplateObject,
	resources types.TemplateObject,
	transform types.TemplateObject,
	errors []error,
) {
	source = "kombustion-core-resources"
	var resource SESReceiptRule
	err := yaml.Unmarshal([]byte(data), &resource)

	if err != nil {
		errors = append(errors, err)
		return
	}

	if validateErrs := resource.Properties.Validate(); len(errors) > 0 {
		errors = append(errors, validateErrs...)
		return
	}

	resources = types.TemplateObject{name: resource}

	return
}

// ParseSESReceiptRule validator
func (resource SESReceiptRule) Validate() []error {
	return resource.Properties.Validate()
}

// ParseSESReceiptRuleProperties validator
func (resource SESReceiptRuleProperties) Validate() []error {
	errors := []error{}
	if resource.RuleSetName == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'RuleSetName'"))
	}
	if resource.Rule == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'Rule'"))
	} else {
		errors = append(errors, resource.Rule.Validate()...)
	}
	return errors
}
