package resources

// Code generated by go generate; DO NOT EDIT.
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
)

// AutoScalingLifecycleHook Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html
type AutoScalingLifecycleHook struct {
	Type       string                             `yaml:"Type"`
	Properties AutoScalingLifecycleHookProperties `yaml:"Properties"`
	Condition  interface{}                        `yaml:"Condition,omitempty"`
	Metadata   interface{}                        `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                        `yaml:"DependsOn,omitempty"`
}

// AutoScalingLifecycleHook Properties
type AutoScalingLifecycleHookProperties struct {
	AutoScalingGroupName  interface{} `yaml:"AutoScalingGroupName"`
	DefaultResult         interface{} `yaml:"DefaultResult,omitempty"`
	HeartbeatTimeout      interface{} `yaml:"HeartbeatTimeout,omitempty"`
	LifecycleHookName     interface{} `yaml:"LifecycleHookName,omitempty"`
	LifecycleTransition   interface{} `yaml:"LifecycleTransition"`
	NotificationMetadata  interface{} `yaml:"NotificationMetadata,omitempty"`
	NotificationTargetARN interface{} `yaml:"NotificationTargetARN,omitempty"`
	RoleARN               interface{} `yaml:"RoleARN,omitempty"`
}

// NewAutoScalingLifecycleHook constructor creates a new AutoScalingLifecycleHook
func NewAutoScalingLifecycleHook(properties AutoScalingLifecycleHookProperties, deps ...interface{}) AutoScalingLifecycleHook {
	return AutoScalingLifecycleHook{
		Type:       "AWS::AutoScaling::LifecycleHook",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseAutoScalingLifecycleHook parses AutoScalingLifecycleHook
func ParseAutoScalingLifecycleHook(
	name string,
	data string,
) (
	source string,
	conditions types.TemplateObject,
	metadata types.TemplateObject,
	mappings types.TemplateObject,
	outputs types.TemplateObject,
	parameters types.TemplateObject,
	resources types.TemplateObject,
	transform types.TemplateObject,
	errors []error,
) {
	source = "kombustion-core-resources"
	var resource AutoScalingLifecycleHook
	err := yaml.Unmarshal([]byte(data), &resource)

	if err != nil {
		errors = append(errors, err)
		return
	}

	if validateErrs := resource.Properties.Validate(); len(errors) > 0 {
		errors = append(errors, validateErrs...)
		return
	}

	resources = types.TemplateObject{name: resource}

	return
}

// ParseAutoScalingLifecycleHook validator
func (resource AutoScalingLifecycleHook) Validate() []error {
	return resource.Properties.Validate()
}

// ParseAutoScalingLifecycleHookProperties validator
func (resource AutoScalingLifecycleHookProperties) Validate() []error {
	errors := []error{}
	if resource.AutoScalingGroupName == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'AutoScalingGroupName'"))
	}
	if resource.LifecycleTransition == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'LifecycleTransition'"))
	}
	return errors
}
