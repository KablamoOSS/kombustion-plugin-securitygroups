package resources

// Code generated by go generate; DO NOT EDIT.
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
)

// WAFRegionalByteMatchSet Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-bytematchset.html
type WAFRegionalByteMatchSet struct {
	Type       string                            `yaml:"Type"`
	Properties WAFRegionalByteMatchSetProperties `yaml:"Properties"`
	Condition  interface{}                       `yaml:"Condition,omitempty"`
	Metadata   interface{}                       `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                       `yaml:"DependsOn,omitempty"`
}

// WAFRegionalByteMatchSet Properties
type WAFRegionalByteMatchSetProperties struct {
	Name            interface{} `yaml:"Name"`
	ByteMatchTuples interface{} `yaml:"ByteMatchTuples,omitempty"`
}

// NewWAFRegionalByteMatchSet constructor creates a new WAFRegionalByteMatchSet
func NewWAFRegionalByteMatchSet(properties WAFRegionalByteMatchSetProperties, deps ...interface{}) WAFRegionalByteMatchSet {
	return WAFRegionalByteMatchSet{
		Type:       "AWS::WAFRegional::ByteMatchSet",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseWAFRegionalByteMatchSet parses WAFRegionalByteMatchSet
func ParseWAFRegionalByteMatchSet(
	name string,
	data string,
) (
	source string,
	conditions types.TemplateObject,
	metadata types.TemplateObject,
	mappings types.TemplateObject,
	outputs types.TemplateObject,
	parameters types.TemplateObject,
	resources types.TemplateObject,
	transform types.TemplateObject,
	errors []error,
) {
	source = "kombustion-core-resources"
	var resource WAFRegionalByteMatchSet
	err := yaml.Unmarshal([]byte(data), &resource)

	if err != nil {
		errors = append(errors, err)
		return
	}

	if validateErrs := resource.Properties.Validate(); len(errors) > 0 {
		errors = append(errors, validateErrs...)
		return
	}

	resources = types.TemplateObject{name: resource}

	return
}

// ParseWAFRegionalByteMatchSet validator
func (resource WAFRegionalByteMatchSet) Validate() []error {
	return resource.Properties.Validate()
}

// ParseWAFRegionalByteMatchSetProperties validator
func (resource WAFRegionalByteMatchSetProperties) Validate() []error {
	errors := []error{}
	if resource.Name == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'Name'"))
	}
	return errors
}
