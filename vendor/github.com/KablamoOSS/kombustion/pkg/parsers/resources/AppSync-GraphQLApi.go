package resources

// Code generated by go generate; DO NOT EDIT.
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/pkg/parsers/properties"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
)

// AppSyncGraphQLApi Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlapi.html
type AppSyncGraphQLApi struct {
	Type       string                      `yaml:"Type"`
	Properties AppSyncGraphQLApiProperties `yaml:"Properties"`
	Condition  interface{}                 `yaml:"Condition,omitempty"`
	Metadata   interface{}                 `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                 `yaml:"DependsOn,omitempty"`
}

// AppSyncGraphQLApi Properties
type AppSyncGraphQLApiProperties struct {
	AuthenticationType  interface{}                               `yaml:"AuthenticationType"`
	Name                interface{}                               `yaml:"Name"`
	UserPoolConfig      *properties.GraphQLApiUserPoolConfig      `yaml:"UserPoolConfig,omitempty"`
	OpenIDConnectConfig *properties.GraphQLApiOpenIDConnectConfig `yaml:"OpenIDConnectConfig,omitempty"`
	LogConfig           *properties.GraphQLApiLogConfig           `yaml:"LogConfig,omitempty"`
}

// NewAppSyncGraphQLApi constructor creates a new AppSyncGraphQLApi
func NewAppSyncGraphQLApi(properties AppSyncGraphQLApiProperties, deps ...interface{}) AppSyncGraphQLApi {
	return AppSyncGraphQLApi{
		Type:       "AWS::AppSync::GraphQLApi",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseAppSyncGraphQLApi parses AppSyncGraphQLApi
func ParseAppSyncGraphQLApi(
	name string,
	data string,
) (
	source string,
	conditions types.TemplateObject,
	metadata types.TemplateObject,
	mappings types.TemplateObject,
	outputs types.TemplateObject,
	parameters types.TemplateObject,
	resources types.TemplateObject,
	transform types.TemplateObject,
	errors []error,
) {
	source = "kombustion-core-resources"
	var resource AppSyncGraphQLApi
	err := yaml.Unmarshal([]byte(data), &resource)

	if err != nil {
		errors = append(errors, err)
		return
	}

	if validateErrs := resource.Properties.Validate(); len(errors) > 0 {
		errors = append(errors, validateErrs...)
		return
	}

	resources = types.TemplateObject{name: resource}

	return
}

// ParseAppSyncGraphQLApi validator
func (resource AppSyncGraphQLApi) Validate() []error {
	return resource.Properties.Validate()
}

// ParseAppSyncGraphQLApiProperties validator
func (resource AppSyncGraphQLApiProperties) Validate() []error {
	errors := []error{}
	if resource.AuthenticationType == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'AuthenticationType'"))
	}
	if resource.Name == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'Name'"))
	}
	return errors
}
