package properties

// Code generated by go generate; DO NOT EDIT.
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import "fmt"

// DeliveryStreamElasticsearchDestinationConfiguration Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-elasticsearchdestinationconfiguration.html
type DeliveryStreamElasticsearchDestinationConfiguration struct {
	DomainARN                interface{}                                `yaml:"DomainARN"`
	IndexName                interface{}                                `yaml:"IndexName"`
	IndexRotationPeriod      interface{}                                `yaml:"IndexRotationPeriod"`
	RoleARN                  interface{}                                `yaml:"RoleARN"`
	S3BackupMode             interface{}                                `yaml:"S3BackupMode"`
	TypeName                 interface{}                                `yaml:"TypeName"`
	S3Configuration          *DeliveryStreamS3DestinationConfiguration  `yaml:"S3Configuration"`
	ProcessingConfiguration  *DeliveryStreamProcessingConfiguration     `yaml:"ProcessingConfiguration,omitempty"`
	RetryOptions             *DeliveryStreamElasticsearchRetryOptions   `yaml:"RetryOptions"`
	BufferingHints           *DeliveryStreamElasticsearchBufferingHints `yaml:"BufferingHints"`
	CloudWatchLoggingOptions *DeliveryStreamCloudWatchLoggingOptions    `yaml:"CloudWatchLoggingOptions,omitempty"`
}

// DeliveryStreamElasticsearchDestinationConfiguration validation
func (resource DeliveryStreamElasticsearchDestinationConfiguration) Validate() []error {
	errors := []error{}

	if resource.DomainARN == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'DomainARN'"))
	}
	if resource.IndexName == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'IndexName'"))
	}
	if resource.IndexRotationPeriod == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'IndexRotationPeriod'"))
	}
	if resource.RoleARN == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'RoleARN'"))
	}
	if resource.S3BackupMode == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'S3BackupMode'"))
	}
	if resource.TypeName == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'TypeName'"))
	}
	if resource.S3Configuration == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'S3Configuration'"))
	} else {
		errors = append(errors, resource.S3Configuration.Validate()...)
	}
	if resource.RetryOptions == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'RetryOptions'"))
	} else {
		errors = append(errors, resource.RetryOptions.Validate()...)
	}
	if resource.BufferingHints == nil {
		errors = append(errors, fmt.Errorf("Missing required field 'BufferingHints'"))
	} else {
		errors = append(errors, resource.BufferingHints.Validate()...)
	}
	return errors
}
